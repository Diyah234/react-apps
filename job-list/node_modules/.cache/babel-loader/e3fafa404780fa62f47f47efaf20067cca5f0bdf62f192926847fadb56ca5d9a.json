{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\static-job-listings-master\\\\job-list\\\\src\\\\components\\\\Jobs.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport data from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs() {\n  _s();\n  const [jobs, setJobs] = useState([]); /* Store the jobs retrieved from Json Data MUST NEVER CHANGE DIRECTLY ONCE LOADED! */\n  const [filters, setFilters] = useState([]); /* Store the taxlist of filters */\n  const [filteredJobs, setFilteredJobs] = useState([]); /* Store the list of Jobs according to user filters */\n\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n  useEffect(() => {\n    setFilteredJobs(jobs);\n  }, [jobs]);\n  useEffect(() => {\n    doFilter();\n  }, [filters]);\n\n  /* Filter functions */\n  /* Add and remove elements in the filter list, apply doFilter() when updated, addFilter() first checks if the clicked element isn't already in the array */\n  const addFilter = el => {\n    !filters.includes(el) && setFilters(filters => [...filters, el]);\n  };\n  const removeFilter = el => {\n    setFilters(filters => filters.filter(elem => {\n      return elem != el;\n    }));\n  };\n\n  /* run in the useEffect everytime the filters state changes */\n\n  const doFilter = () => {\n    setFilteredJobs(jobs.filter(item => filters.every(filter => [item.role, item.level, ...item.languages, ...item.tools].includes(filter))));\n  };\n\n  /* reset everything */\n\n  const clear = () => {\n    setFilters([]);\n    setFilteredJobs(jobs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"jobs\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"filterList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterList-tags\",\n        children: filters.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [el, /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => {\n                removeFilter(el);\n              },\n              children: \" X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: e => {\n          clear();\n        },\n        children: \"Clear all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: filteredJobs.map(item => {\n        const arrTax = [item.role, item.level, ...item.languages, ...item.tools];\n        const arrMeta = [item.postedAt, item.contract, item.location];\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: item.featured ? \"JobItem featured\" : \"JobItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"JobItem-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"JobItem-left__Avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.logo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"JobItem-left__content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"JobItem-left__content-Text\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.company\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), item.new && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" New!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 58\n                  }, this), item.featured && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" Featured\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 63\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"JobItem-left__content-Meta\",\n                children: arrMeta.map(meta => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: meta + \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"JobItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"JobItem-right__Taxonomy\",\n              children: arrTax.map(tag => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: e => {\n                    addFilter(tag);\n                  },\n                  children: tag + \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Jobs, \"TDXZQqAcLicZqgsKuMcxw9FOksQ=\");\n_c = Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","data","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","filters","setFilters","filteredJobs","setFilteredJobs","doFilter","addFilter","el","includes","removeFilter","filter","elem","item","every","role","level","languages","tools","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","e","arrTax","arrMeta","postedAt","contract","location","featured","src","logo","company","new","position","meta","tag","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/static-job-listings-master/job-list/src/components/Jobs.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport data from '../data'\r\n\r\nexport default function Jobs() {\r\n\r\n    const [jobs, setJobs] = useState([]); /* Store the jobs retrieved from Json Data MUST NEVER CHANGE DIRECTLY ONCE LOADED! */\r\n    const [filters, setFilters] = useState([]); /* Store the taxlist of filters */\r\n    const [filteredJobs, setFilteredJobs] = useState([]); /* Store the list of Jobs according to user filters */\r\n\r\n\r\n    useEffect(()=>{\r\n        setJobs(data);\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        setFilteredJobs(jobs);\r\n    },[jobs]);\r\n\r\n    useEffect(()=>{\r\n        doFilter();\r\n    }, [filters]);\r\n\r\n\r\n    /* Filter functions */\r\n    /* Add and remove elements in the filter list, apply doFilter() when updated, addFilter() first checks if the clicked element isn't already in the array */\r\n    const addFilter = el => {\r\n        !filters.includes(el) && setFilters(filters => [...filters, el]);\r\n    }\r\n\r\n    const removeFilter = el =>{\r\n        setFilters(filters => filters.filter( elem =>{\r\n            return elem != el;\r\n        }));\r\n    }\r\n\r\n    /* run in the useEffect everytime the filters state changes */\r\n\r\n    const doFilter = () => {\r\n        setFilteredJobs(\r\n            jobs.filter(item =>\r\n              filters.every(filter =>\r\n                [item.role, item.level, ...item.languages, ...item.tools].includes(filter)\r\n              )\r\n            )\r\n          );\r\n    } \r\n\r\n    /* reset everything */\r\n\r\n    const clear = () =>{\r\n        setFilters([]);\r\n        setFilteredJobs(jobs);\r\n    }\r\n\r\n    return(\r\n        <section className=\"jobs\">\r\n            <header>\r\n\r\n            </header>\r\n            <section className=\"filterList\">\r\n                <div className=\"filterList-tags\">\r\n                {filters.map(el=>{\r\n                    return(\r\n                        <h2>{el}<span onClick={e=>{removeFilter(el)}}>{\" X\"}</span></h2>\r\n                    )\r\n                })}\r\n                </div>\r\n                <span onClick={e=>{clear()}}>{\"Clear all\"}</span>\r\n            </section>\r\n\r\n            <section>\r\n                {filteredJobs.map(item=>{\r\n                    const arrTax = [item.role, item.level, ...item.languages, ...item.tools];\r\n                    const arrMeta = [item.postedAt, item.contract, item.location];\r\n                    return (\r\n                        <article className={item.featured ? \"JobItem featured\" : \"JobItem\"}>\r\n                            <section className=\"JobItem-left\">\r\n                                <div className=\"JobItem-left__Avatar\">\r\n                                    <figure>\r\n                                        <img src={item.logo} /> \r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"JobItem-left__content\">\r\n                                    <div className=\"JobItem-left__content-Text\">\r\n                                        <div>\r\n                                            <span>{item.company}</span>\r\n                                            {item.new && <span>{\" New!\"}</span>}\r\n                                            {item.featured && <span>{\" Featured\"}</span>}\r\n                                        </div>\r\n                                        <h2>{item.position}</h2>\r\n                                    </div>\r\n                                    <div className=\"JobItem-left__content-Meta\">\r\n                                        {\r\n                                            arrMeta.map(meta=>{\r\n                                                    return(\r\n                                                        <span>{meta + \" \"}</span>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <section className=\"JobItem-right\">\r\n                                <div className=\"JobItem-right__Taxonomy\">\r\n                                    {\r\n                                        arrTax.map(tag=>{\r\n                                                return(\r\n                                                    <span onClick={e=>{addFilter(tag)}}>{tag + \" \"}</span>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                        </article>\r\n                    )\r\n                })}\r\n            </section>\r\n        </section>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}